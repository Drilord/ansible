---
- name: Ensure MaxScale VM exists
  hosts: localhost
  gather_facts: false
  vars_files:
    - /etc/ansible/group_vars/gcp.yml
  vars:
    maxscale_vm_name: maxscale-{{ replica_zone }}
    maxscale_zone: "{{ replica_zone }}"
    maxscale_machine_type: n4-highcpu-4
    maxscale_disk_size: 20
    maxscale_image: projects/ubuntu-os-cloud/global/images/family/ubuntu-2204-lts
    maxscale_service_account_file: "{{ gcp_service_account_file }}"
    maxscale_project: "{{ gcp_project_name }}"
    maxscale_hostname: maxscale
  tasks:
    - name: Ensure MaxScale VM exists (create if needed)
      google.cloud.gcp_compute_instance:
        name: "{{ maxscale_vm_name }}"
        hostname: "{{ maxscale_hostname }}"
        machine_type: "{{ maxscale_machine_type }}"
        zone: "{{ maxscale_zone }}"
        project: "{{ maxscale_project }}"
        auth_kind: serviceaccount
        service_account_file: "{{ maxscale_service_account_file }}"
        disks:
          - auto_delete: true
            boot: true
            device_name: boot-disk
            initialize_params:
              source_image: "{{ maxscale_image }}"
              disk_name: "{{ maxscale_vm_name }}-boot"
              disk_type: pd-ssd
              disk_size_gb: "{{ maxscale_disk_size }}"
        network_interfaces:
          - network: { selfLink: "https://www.googleapis.com/compute/v1/projects/{{ maxscale_project }}/global/networks/staging-vpc" }
            access_configs:
              - name: External NAT
                network_tier: STANDARD
                type: ONE_TO_ONE_NAT
        state: present
      register: maxscale_vm

    - name: Wait for SSH to become available on MaxScale VM
      ansible.builtin.wait_for:
        host: "{{ maxscale_vm_name }}"
        port: 22
        delay: 5
        timeout: 300
        state: started
      delegate_to: localhost

- name: Ensure MaxScale container is running and configured
  hosts: "{{ maxscale_vm_name }}"
  gather_facts: false
  become: true
  vars_files:
    - /etc/ansible/group_vars/gcp.yml
  vars:
    maxscale_threads: 2
    maxscale_qc_cache_size: 600M
  tasks:
    - name: Ensure Docker is installed
      ansible.builtin.apt:
        name: docker.io
        state: present
        update_cache: yes

    - name: Ensure MaxScale config directory exists
      ansible.builtin.file:
        path: /etc/maxscale
        state: directory

    - name: Deploy MaxScale config
      ansible.builtin.copy:
        dest: /etc/maxscale/maxscale.cnf
        content: |
          [maxscale]
          threads={{ maxscale_threads }}
          query_classifier_cache_size={{ maxscale_qc_cache_size }}
          admin_host=0.0.0.0
          admin_secure_gui=false
          log_info=1
          log_notice=1
          log_warning=1

          # Add your server, service, listener, and monitor sections here
        owner: root
        group: root
        mode: '0644'

    - name: Pull latest MaxScale image
      community.docker.docker_image:
        name: mariadb/maxscale:latest
        source: pull

    - name: Ensure MaxScale container is running
      community.docker.docker_container:
        name: maxscale
        image: mariadb/maxscale:latest
        state: started
        restart_policy: unless-stopped
        published_ports:
          - "3306:3306"
          - "8989:8989"
        volumes:
          - /etc/maxscale/maxscale.cnf:/etc/maxscale.cnf
        recreate: true