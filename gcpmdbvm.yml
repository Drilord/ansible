---
# Playbook to configure a MariaDB VM for replication using GCP.
# =============================================================================
# Set the replica name here or pass it via --extra-vars "replica_name=replica2"
# =============================================================================
- name: Ensure the VM exists
  hosts: localhost
  gather_facts: false
  vars_files:
    - /etc/ansible/group_vars/gcp.yml
  tasks:
    - name: Ensure the VM exists (create if needed)
      google.cloud.gcp_compute_instance:
        name: "{{ replica_name }}-{{ replica_zone }}"
        hostname: "{{ replica_name }}.mdb"
        machine_type: e2-standard-2
        zone: "{{ replica_zone }}"
        project: "{{ gcp_project_name }}"
        auth_kind: serviceaccount
        service_account_file: "{{ gcp_service_account_file }}"
        disks:
          - auto_delete: true
            boot: true
            device_name: boot-disk
            initialize_params:
              source_image: projects/ubuntu-os-cloud/global/images/family/ubuntu-2204-lts
              disk_name: "{{ replica_name }}-boot"
              disk_type: pd-standard
              disk_size_gb: 100
        network_interfaces:
          - network: { selfLink: "https://www.googleapis.com/compute/v1/projects/{{ gcp_project_name }}/global/networks/staging-vpc" }
            access_configs:
              - name: External NAT
                network_tier: STANDARD
                type: ONE_TO_ONE_NAT
        metadata:
          startup-script: |
            #!/bin/bash
            if [ ! -f /var/log/tailscale-installed ]; then
              curl -fsSL https://tailscale.com/install.sh | sh
              tailscale up --authkey={{ tailscale_auth_key }} --ssh --hostname={{ replica_name }}
              touch /var/log/tailscale-installed
            fi
        state: present        
      register: vm_instance
      
    - name: Add new vm to inventory.ini using Tailscale hostname
      ansible.builtin.lineinfile:
        path: /etc/ansible/inventory.ini
        insertbefore: '^\[mariadb:children\]'
        line: "{{ replica_name }} ansible_host={{ replica_name }} ansible_user=root replica_server_id={{ server_id }}"

    - name: Add new VM to in-memory inventory using Tailscale hostname
      add_host:
        name: "{{ replica_name }}"
        ansible_host: "{{ replica_name }}"
        ansible_user: root
        replica_server_id: "{{ server_id }}"


# =============================================================================
# Play 1: Ensure Required Tools are Installed
# =============================================================================
- name: Ensure Required Tools are Installed
  hosts: "{{ replica_name }}"
  gather_facts: false
  vars_files:
    - /etc/ansible/group_vars/gcp.yml
  vars:
    user : root # change to ansible user for prod 
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
  tasks:
    - name: Gather installed package facts
      ansible.builtin.package_facts:
        manager: auto

    - name: Check if Python 3 is installed
      raw: |
        dpkg -l | grep python3
      register: check_python3
      changed_when: false
      failed_when: check_python3.rc not in [0, 1]

    - name: Install Python 3 if not present
      raw: |
        apt-get update && apt-get install -y python3
      when: check_python3.rc == 1

    - name: Install python3-mysqldb
      ansible.builtin.apt:
        name: python3-mysqldb
        state: present

    - name: Install MariaDB
      ansible.builtin.apt:
        name: mariadb-server
        state: present

  
    - name: Install AppArmor
      ansible.builtin.apt:
        name:
          - apparmor
          - apparmor-utils
        state: present

        

    - name: Apply MariaDB AppArmor profile if not applied
      ansible.builtin.shell: |
        sudo ln -s /etc/apparmor.d/usr.sbin.mysqld /etc/apparmor.d/enable/
        sudo apparmor_parser -r /etc/apparmor.d/usr.sbin.mysqld
      when: "'mariadb-server' in ansible_facts.packages"

    - name: Reload AppArmor to apply changes
      ansible.builtin.service:
        name: apparmor
        state: reloaded


