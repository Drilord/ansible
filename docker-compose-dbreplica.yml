services:

  laravel:
    build: sail/images/phpfpm
    hostname: laravel
    container_name: laravel
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    logging: &logging
      driver: "json-file"
      options:
        max-size: "5k"
        max-file: "1"
    environment:
      WAIT_HOSTS: mysql:3306,redis:6379
      LARAVEL_SAIL: 1
      WORKER_THREADS: 4
      GITHUB_PERSONAL_TOKEN: ${GITHUB_PERSONAL_TOKEN}
    secrets:
      - id_ed25519
    restart: unless-stopped  
    depends_on:
      - redis
      - mysql
    volumes:
      - ./:/atomic
      - composer:/root/.cache/composer/

  nginx:
    build: sail/images/nginx
    hostname: nginx
    container_name: nginx
    logging: *logging
    depends_on:
      - laravel
    networks:
      default:
        aliases:
          - whitelabel.cool
          - incfile.cool
          - db.cool
          - pro.cool
    restart: unless-stopped      
    volumes:
      - ./:/atomic
    ports:
      - "127.0.0.1:80:80"
      - "127.0.0.1:443:443"

  mysql:
    image: mariadb:10.4.20-focal
    hostname: mysql
    container_name: mysql
    logging: *logging
    restart: unless-stopped
    ports:
      - "127.0.0.1:3308:3306"
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=true
    command: >
      mysqld
       --server-id=1
       --log-bin=mysql-bin
       --binlog-format=ROW
       --innodb-buffer-pool-size=256M
       --innodb_doublewrite=0
       --innodb-flush-log-at-trx-commit=0
       --log-slave-updates
       --gtid-domain-id=1
       --gtid-strict-mode
      

  mysqlreplica:
    image: mariadb:10.4.20-focal
    hostname: mysqlreplica
    container_name: mysqlreplica
    depends_on:
      - mysql
    logging: *logging
    restart: unless-stopped
    ports:
      - "127.0.0.1:3307:3306"
    environment:
      - MARIADB_ALLOW_EMPTY_ROOT_PASSWORD=true
    command: > 
       mysqld
       --server-id=2
       --relay-log=mysql-relay-bin
       --log-bin=mysql-bin
       --binlog-format=ROW
       --read-only=1
       --innodb-buffer-pool-size=256M
       --innodb_doublewrite=0
       --innodb-flush-log-at-trx-commit=0
       --log-slave-updates
       --gtid-domain-id=1
       --gtid-strict-mode

  mysqlrep2:
    image: mariadb:10.4.20-focal
    hostname: mysqlrep2
    container_name: mysqlrep2
    depends_on:
      - mysql
    logging: *logging
    restart: unless-stopped
    ports:
      - "127.0.0.1:3310:3306"
    environment:
      - MARIADB_ALLOW_EMPTY_ROOT_PASSWORD=true

      

  maxscale:
      image: mariadb/maxscale:latest
      ports:
        - "3306:3306"
        - "8989:8989"
      restart: unless-stopped  
      volumes:
       - /Users/diegog/Downloads/maxscale.cnf:/etc/maxscale.cnf
      depends_on:
        - mysql
        - mysqlreplica
      logging: *logging  

  maxscale2:
      image: mariadb/maxscale:latest
      ports:
        - "3309:3306"
        - "8990:8989"
      restart: unless-stopped  
      volumes:
       - /Users/diegog/Downloads/maxscale.cnf:/etc/maxscale2.cnf
      depends_on:
        - mysql
        - mysqlreplica
      logging: *logging     

  redis:
    image: redis:5.0.7-alpine
    hostname: redis
    container_name: redis
    logging: *logging
    restart: unless-stopped
    command: redis-server --appendonly no --save 0 --maxmemory 50M

  mailhog:
    image: mailhog/mailhog
    hostname: mailhog
    container_name: mailhog
    restart: unless-stopped
    logging: *logging

  ansible:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ansible
    restart: unless-stopped
    volumes:
      - /Users/diegog/Library/CloudStorage/GoogleDrive-diego.g@incfile.com/My Drive/Github Actions/ansible:/etc/ansible
      - /var/run/docker.sock:/var/run/docker.sock
    tty: true
    stdin_open: true  
    command: sleep infinity # keep the container running as set to stop after running ansible --version in the Dockerfile
    logging: *logging

volumes:
  composer:

secrets:
  id_ed25519:
    file: ~/.ssh/id_ed25519
